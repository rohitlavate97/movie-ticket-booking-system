version: "3.8"
services:
  eureka-server:
    build: ./movie-service-registry
    container_name: eureka-server
    ports:
     - "8761:8761"
    healthcheck:
      test: "curl --fail --silent localhost:8765/actuator/health/readiness | grep UP || exit 0"
      interval: 15s
      timeout: 5s
      retries: 5
      start_period: 10s
#For every 15sec retry it will execute command and wait for 5 sec
    environment:
      - SERVER_PORT=8761
      - APPLICATION_NAME=movie-services-registry
      - REGISTER_WITH_EUREKA=false
      - FETCH_REGISTRY=false

  api-gateway:
    build: ./api-gateway
    container_name: api-gateway
    ports:
        - "8765:8765"
    depends_on:
      eureka-server:
        condition: service_healthy
#BookingService will not start until eureka-server up and running
#service_healthy,service_completed_successfully are similar
    healthcheck:
      test: "curl --fail --silent localhost:8765/actuator/health/readiness | grep UP || exit 0"
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s
    environment:
      - SERVER_PORT=8765
      - APPLICATION_NAME=api-gateway
      - REGISTER_WITH_EUREKA=true
      - DEFAULT_ZONE=http://eureka-server:8761/eureka/

  booking-service:
    build: ./booking-service
    container_name: booking-service
    ports:
      - "8080:8080"
    depends_on:
      eureka-server:
          condition: service_healthy
      api-gateway:
        condition: service_healthy
      payment-service:
        condition: service_healthy
    environment:
      - SERVER_PORT=8080
      - APPLICATION_NAME=booking-service
      - REGISTER_WITH_EUREKA=true
      - DEFAULT_ZONE=http://eureka-server:8761/eureka/

  payment-service:
    build: ./payment-service
    container_name: payment-service
    ports:
      - "9090:9090"
    depends_on:
      eureka-server:
        condition: service_healthy
      api-gateway:
        condition: service_healthy
    healthcheck:
      test: "curl --fail --silent localhost:9090/actuator/health/readiness | grep UP || exit 0"
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s
    environment:
      - SERVER_PORT=9090
      - APPLICATION_NAME=payment-service
      - REGISTER_WITH_EUREKA=true
      - DEFAULT_ZONE=http://eureka-server:8761/eureka/

  notification-service:
    build: ./notification-service
    container_name: notification-service
    ports:
      - "7070:7070"
#    depends_on:
#      eureka-server:
#        condition: service_healthy
    environment:
      - SERVER_PORT=7070
      - APPLICATION_NAME=notification-service
      - REGISTER_WITH_EUREKA=true
      - DEFAULT_ZONE=http://eureka-server:8761/eureka/
#need to add mysqldb as booking,payment,notification services depends on it